package main

import "math"

const equator float64 = 0.0052910052910053

// dist588 возвращает смещение в градусах на 588 метров для данных координат
func (g *Gps) dist589() (north, east float64) {
	north = equator
	east = equator / math.Cos(g.lat*(math.Pi/180))
	return
	/*
		вдоль мередиана смешение в градусах постоянно
		вдоль параллели - изменяется в зависимости от широты
		мне нужно вычислить точки А и С от точки I
		т.е. произвести смещение вдоль мередианов и парралелей
		и нужно знать на сколько градусов смещаться для данной широты
		(при движении вдоль параллели, т.е. когда изменяю долготу)
		l = le * math.cos(lat)
		le = // длина дуги на экваторе (1" = 31 метр)
		111321 м в 1 градусе на экваторе (при движении вдоль параллели)
		это 189 раз по 589 метров
		это значит 0.0052910052910053 градусов = 589 метров
		это то число, на которое для точки на экваторе нужно увеличивать или уменьшать
		исходную долготу, чтобы получить долготу точек А и С
		по таблице на широте 57 в 1 градусе 60773 метров
		т.е. 60773/589 = 103,1799660441426 раз, т.е. 0,0096918101296861, т.е. примероно 0,01
		поэтому мне нужно было умножать на 2, чтобы сделать сектор квадратным
		по формуле: 0.0052910052910053 / cos(57) = 0.0052910052910053 / 0,54463903501502708222408369208157 = 0,0097146917499481307802048696476 ~ 0.01
	*/

	/*
		Шаг сектора:
		вариант 1: 0.005 на экваторе будут квадратные в этом случае
		вариант 2: 0.01
		вариант 3: 0.001 секторов будет больше (т.е. подписок тоже), но ближе к границе выступать квадраты будут - (1000*180)^2 = 32.400.000.000 секторов будет - не подходит,
		т.к. даже на экваторе будет (5+5)*(5+5) = 100 подписок
		Значит, вариант 2
		Поскольку секторы больше дистанции смещения при поиске А и С, то количество секторов может быть меньше 4 - протестируем на разных точках земной поверхности
	*/

	/*
		Северный и южный полюсы
		Все кто выше 89 и ниже -89 - в одном секторе (не беда, там всего может 1000 человек)
	*/

	/*
		Гринвич - нулевой меридиан
		?
	*/

	// случай когда параллель -> 90 или -90 (будет очень много секторов)
	// return 3.14
}
